"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.recommended = void 0;
const eslint_plugin_ts_1 = __importDefault(require("@stylistic/eslint-plugin-ts"));
const tsParser = __importStar(require("@typescript-eslint/parser"));
const recommended_1 = __importDefault(require("eslint-plugin-prettier/recommended"));
const typescript_eslint_1 = __importDefault(require("typescript-eslint"));
const rules_1 = require("../rules");
const javascript_1 = require("./javascript");
const json_1 = require("./json");
const typescript_1 = require("./typescript");
const utils_1 = require("./utils");
function recommended(extenions) {
    return [
        recommended_1.default,
        ...json_1.jsonConfigs,
        ...typescript_eslint_1.default.configs.recommended.map((config) => {
            return {
                ...config,
                files: (0, utils_1.getFiles)(config, typescript_1.tsFileExtensions),
            };
        }),
        {
            name: 'blitz/recommended-js',
            files: javascript_1.jsFileExtensions,
            ...typescript_eslint_1.default.configs.disableTypeChecked,
            plugins: {
                '@blitz': {
                    rules: rules_1.rules,
                },
            },
            languageOptions: {
                parser: tsParser,
                parserOptions: {
                    ecmaVersion: 'latest',
                    sourceType: 'module',
                },
            },
            rules: {
                ...javascript_1.jsRules,
            },
        },
        {
            name: 'blitz/recommended-ts',
            files: typescript_1.tsFileExtensions,
            plugins: {
                '@stylistic/ts': eslint_plugin_ts_1.default,
                '@blitz': {
                    rules: rules_1.rules,
                },
            },
            rules: {
                ...(0, typescript_1.tsRules)(extenions?.ts),
            },
        },
    ];
}
exports.recommended = recommended;
//# sourceMappingURL=recommended.js.map