import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  DocInput,
  HighlightStyle,
  IndentContext,
  LRLanguage,
  Language,
  LanguageDescription,
  LanguageSupport,
  ParseContext,
  StreamLanguage,
  StringStream,
  TreeIndentContext,
  bidiIsolates,
  bracketMatching,
  bracketMatchingHandle,
  codeFolding,
  continuedIndent,
  defaultHighlightStyle,
  defineLanguageFacet,
  delimitedIndent,
  ensureSyntaxTree,
  flatIndent,
  foldAll,
  foldCode,
  foldEffect,
  foldGutter,
  foldInside,
  foldKeymap,
  foldNodeProp,
  foldService,
  foldState,
  foldable,
  foldedRanges,
  forceParsing,
  getIndentUnit,
  getIndentation,
  highlightingFor,
  indentNodeProp,
  indentOnInput,
  indentRange,
  indentService,
  indentString,
  indentUnit,
  language,
  languageDataProp,
  matchBrackets,
  sublanguageProp,
  syntaxHighlighting,
  syntaxParserRunning,
  syntaxTree,
  syntaxTreeAvailable,
  toggleFold,
  unfoldAll,
  unfoldCode,
  unfoldEffect
} from "./chunk-DVUVJ2ML.js";
import "./chunk-JTDDKZ3N.js";
import "./chunk-XA2DEIKJ.js";
import "./chunk-ZZ6P5DIA.js";
export {
  DocInput,
  HighlightStyle,
  IndentContext,
  LRLanguage,
  Language,
  LanguageDescription,
  LanguageSupport,
  ParseContext,
  StreamLanguage,
  StringStream,
  TreeIndentContext,
  bidiIsolates,
  bracketMatching,
  bracketMatchingHandle,
  codeFolding,
  continuedIndent,
  defaultHighlightStyle,
  defineLanguageFacet,
  delimitedIndent,
  ensureSyntaxTree,
  flatIndent,
  foldAll,
  foldCode,
  foldEffect,
  foldGutter,
  foldInside,
  foldKeymap,
  foldNodeProp,
  foldService,
  foldState,
  foldable,
  foldedRanges,
  forceParsing,
  getIndentUnit,
  getIndentation,
  highlightingFor,
  indentNodeProp,
  indentOnInput,
  indentRange,
  indentService,
  indentString,
  indentUnit,
  language,
  languageDataProp,
  matchBrackets,
  sublanguageProp,
  syntaxHighlighting,
  syntaxParserRunning,
  syntaxTree,
  syntaxTreeAvailable,
  toggleFold,
  unfoldAll,
  unfoldCode,
  unfoldEffect
};
//# sourceMappingURL=@codemirror_language.js.map
